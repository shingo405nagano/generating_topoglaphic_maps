# -*- coding: utf-8 -*-
"""
/***************************************************************************
 GeneratingTopography
                                 A QGIS plugin
 DTMから地形図を生成
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2024-08-26
        copyright            : (C) 2024 by ShingoNagano
        email                : shingosnaganon@gmail.com
        git sha              : $Format:%H$
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
 This script initializes the plugin, making it known to QGIS.
"""
import subprocess
import os
import tempfile

import glob
from qgis.core import QgsMessageLog
# # Debugging in VSCode
# import debugpy
# import shutil
# import sys

# sys.path.append('C:\\Users\\makis\\.vscode\\extensions\\ms-python.python-2024.14.1-win32-x64\\python_files\\lib\\python')

# debugpy.configure(python=shutil.which("python"))
# try:
# 	debugpy.listen(("localhost", 5656))
# except:
# 	debugpy.connect(("localhost", 5656))
# # END Debugging in VSCode

# Install packages
install_packages = []
try:
	import shapely
except Exception:
	install_lst.append('shapely')
try:
	import pandas
except Exception:
	install_lst.append('pandas')
try:
	import geopandas
except Exception:
	install_lst.append('geopandas')
reply = QMessageBox.question(
	None,
	'Message',
	f"{str(install_packages)} is not installed.Do you want to install ?\nIt may take some time, but do not touch it until the message appears after completion.",
	QMessageBox.Yes | QMessageBox.No,
	QMessageBox.No
)
if reply:
	for package in install_packages:
		result = subprocess.run(
            ['python', '-m', 'pip', 'install', package], \
            capture_output=True, 
            text=True
        )
		install_process = result.stdout
		success = "Successfully installed" in install_process
		if success:
			QgsMessageLog.logMessage(f"{package} is successfully installed.", MESSAGE_CATEGORY, Qgis.Info)
		else:
			QgsMessageLog.logMessage(f"Failed to install {package}. Please install manually.", MESSAGE_CATEGORY, Qgis.Critical)
else:
	QgsMessageLog.logMessage(f"Failed to install {str(packages)}. Please install manually.", MESSAGE_CATEGORY, Qgis.Critical)

# noinspection PyPep8Naming
def classFactory(iface):  # pylint: disable=invalid-name
    """Load GeneratingTopography class from file GeneratingTopography.

    :param iface: A QGIS interface instance.
    :type iface: QgsInterface
    """
    #
    from .topo_maps import TopoMaps
    return TopoMaps(iface)


def clean_temp_topomaps():
    temp_dir = tempfile.gettempdir()
    topo_maps_files = glob.glob(os.path.join(temp_dir, "*_topoMaps.tif"))
    for file_path in topo_maps_files:
        try:
            os.remove(file_path)
        except OSError as e:
            print(f"Error deleting file {file_path}: {e}")

clean_temp_topomaps()
