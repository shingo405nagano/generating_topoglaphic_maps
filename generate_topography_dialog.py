# -*- coding: utf-8 -*-
"""
/***************************************************************************
 GeneratingTopographyDialog
                                 A QGIS plugin
 DTMから地形図を生成
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2024-08-26
        git sha              : $Format:%H$
        copyright            : (C) 2024 by ShingoNagano
        email                : shingosnaganon@gmail.com
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
"""

import os
from typing import Union

from qgis.PyQt import uic
from qgis.PyQt import QtWidgets

from .apps.colors import Blue2RedColorMaps
from .apps.colors import VintageColorMaps
from .apps.mapper import SlopeOptions
from .apps.mapper import TpiOptions
from .apps.mapper import TriOptions
from .apps.mapper import HillshadeOptions


# This loads your .ui file so that PyQt can populate your plugin with the elements from Qt Designer
FORM_CLASS, _ = uic.loadUiType(os.path.join(
    os.path.dirname(__file__), 'generate_topography_dialog_base.ui'))


class GeneratingTopographyDialog(QtWidgets.QDialog, FORM_CLASS):
    def __init__(self, parent=None):
        """Constructor."""
        super(GeneratingTopographyDialog, self).__init__(parent)
        # Set up the user interface from Designer through FORM_CLASS.
        # After self.setupUi() you can access any designer object by doing
        # self.<objectname>, and you can use autoconnect slots - see
        # http://qt-project.org/doc/qt-4.8/designer-using-a-ui-file.html
        # #widgets-and-dialogs-with-auto-connect
        self.setupUi(self)

    @property
    def select_map_style(self) -> Union[Blue2RedColorMaps, VintageColorMaps]:
        """
        Radio buttonで選択されたカラーマップを返す
        """
        print('Selecting map style')
        if self.mapSelectRadioBtn_BR.isChecked():
            return Blue2RedColorMaps()
        elif self.mapSelectRadioBtn_Vintage.isChecked():
            return VintageColorMaps()
        else:
            raise Blue2RedColorMaps()
    
    def get_input_file_path(self) -> str:
        """
        ファイルパスを取得
        """
        return self.fileWgt_InputFile.filePath()
    
    def get_output_file_path(self) -> str:
        """
        ファイルパスを取得
        """
        return self.fileWgt_OutputFile.filePath()
    
    def get_slope_options(self) -> SlopeOptions:
        options = SlopeOptions(
            checked=self.gpBox_Slope.isChecked(),
            resampling=self.checkBox_Resampling.isChecked(),
            resolution=self.spinBoxF_ResampleResol.value(),
            cmap=self.select_map_style.slope().colors_255
        )
        return options
    
    def get_tpi_options(self) -> TpiOptions:
        options = TpiOptions(
            checked=self.gpBox_Tpi.isChecked(),

        )
        return options
        


